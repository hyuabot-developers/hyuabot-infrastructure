# Create a persistent volume claim for the dev environment
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-pv-volume
  namespace: hyuabot-dev
spec:
  capacity:
    storage: 5Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /mnt/data/postgres-pv-volume
  storageClassName : postgres-pv-storage
---
# Claim the persistent volume for the dev environment
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgresql-pv-claim
  namespace: hyuabot-dev
spec:
  resources:
    requests:
      storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  storageClassName: postgres-pv-storage
---
# Create a pod for the database
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hyuabot-database
  namespace: hyuabot-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hyuabot-database
  template:
    metadata:
      labels:
        app: hyuabot-database
    spec:
      volumes:
      - name: postgres-pv-volume
        persistentVolumeClaim:
          claimName: postgresql-pv-claim
      containers:
      - name: database
        image: postgres:15-alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: secret
              key: DB_ID
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: secret
              key: DB_PASSWORD
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        - name: POSTGRES_DB
          value: hyuabot
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-pv-volume
        resources:
          requests:
            memory: "128Mi"
            cpu: "250m"
          limits:
            memory: "256Mi"
            cpu: "500m"
---
# Expose the database to the cluster
apiVersion: v1
kind: Service
metadata:
  name: hyuabot-database
  namespace: hyuabot-dev
  labels:
    app: hyuabot-database
spec:
  type: NodePort
  ports:
   - port: 5432
  selector:
   app: hyuabot-database
---
# Create schema and tables in the database
apiVersion: batch/v1
kind: Job
metadata:
  name: migration-database
  namespace: hyuabot-dev
spec:
  template:
    metadata:
      name: migration-database
    spec:
      containers:
      - name: migration-database
        image: postgres:15-alpine
        command: ["sh", "-c", "export PGPASSWORD=$POSTGRES_PASSWORD; psql -h hyuabot-database -U $POSTGRES_ID -d $POSTGRES_DB -f /scripts/create_database.sql"]
        volumeMounts:
        - name: migration-script
          mountPath: /scripts
          readOnly: true
        env:
          - name: POSTGRES_ID
            valueFrom:
              secretKeyRef:
                name: secret
                key: DB_ID
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: secret
                key: DB_PASSWORD
          - name: POSTGRES_DB
            value: hyuabot
      restartPolicy: Never
      volumes:
      - name: migration-script
        configMap:
          name: create-database
---
# Load initial data into the database
apiVersion: batch/v1
kind: Job
metadata:
  name: initialize-database
  namespace: hyuabot-dev
spec:
  template:
    metadata:
      name: initialize-database
    spec:
      containers:
      - name: initialize-database
        image: hyuabot-database-initialize
        imagePullPolicy: Never
        env:
          - name: POSTGRES_ID
            valueFrom:
              secretKeyRef:
                name: secret
                key: DB_ID
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: secret
                key: DB_PASSWORD
          - name: POSTGRES_HOST
            value: hyuabot-database
          - name: POSTGRES_PORT
            value: "5432"
          - name: POSTGRES_DB
            value: hyuabot
      restartPolicy: Never
---
# Load initial shuttle timetable data into the database
apiVersion: batch/v1
kind: Job
metadata:
  name: shuttle-timetable-job
  namespace: hyuabot-dev
spec:
  template:
    metadata:
      name: shuttle-timetable-job
    spec:
      containers:
      - name: shuttle-timetable-job
        image: hyuabot-shuttle-timetable-job-image
        imagePullPolicy: Never
        env:
          - name: POSTGRES_ID
            valueFrom:
              secretKeyRef:
                name: secret
                key: DB_ID
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: secret
                key: DB_PASSWORD
          - name: POSTGRES_HOST
            value: hyuabot-database
          - name: POSTGRES_PORT
            value: "5432"
          - name: POSTGRES_DB
            value: hyuabot
      restartPolicy: Never
---
# Load initial bus timetable data into the database
apiVersion: batch/v1
kind: Job
metadata:
  name: bus-timetable-job
  namespace: hyuabot-dev
spec:
  template:
    metadata:
      name: bus-timetable-job
    spec:
      containers:
      - name: bus-timetable-job
        image: hyuabot-bus-timetable-job-image
        imagePullPolicy: Never
        env:
          - name: POSTGRES_ID
            valueFrom:
              secretKeyRef:
                name: secret
                key: DB_ID
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: secret
                key: DB_PASSWORD
          - name: POSTGRES_HOST
            value: hyuabot-database
          - name: POSTGRES_PORT
            value: "5432"
          - name: POSTGRES_DB
            value: hyuabot
      restartPolicy: Never
---
# Create a batch job to fetch bus realtime data
apiVersion: batch/v1
kind: CronJob
metadata:
  name: bus-realtime-cron-job
  namespace: hyuabot-dev
spec:
  schedule: "* * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: bus-realtime-cron-job
            image: hyuabot-bus-cron-job-image
            imagePullPolicy: Never
            env:
            - name: POSTGRES_ID
              valueFrom:
                secretKeyRef:
                  name: secret
                  key: DB_ID
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: secret
                  key: DB_PASSWORD
            - name: POSTGRES_HOST
              value: hyuabot-database
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_DB
              value: hyuabot
          restartPolicy: OnFailure
---
# Load initial subway timetable data into the database
apiVersion: batch/v1
kind: Job
metadata:
  name: subway-timetable-job
  namespace: hyuabot-dev
spec:
  template:
    metadata:
      name: subway-timetable-job
    spec:
      containers:
      - name: subway-timetable-job
        image: hyuabot-subway-timetable-job-image
        imagePullPolicy: Never
        env:
          - name: POSTGRES_ID
            valueFrom:
              secretKeyRef:
                name: secret
                key: DB_ID
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: secret
                key: DB_PASSWORD
          - name: POSTGRES_HOST
            value: hyuabot-database
          - name: POSTGRES_PORT
            value: "5432"
          - name: POSTGRES_DB
            value: hyuabot
      restartPolicy: Never
---
# Create a batch job to fetch subway realtime data
apiVersion: batch/v1
kind: CronJob
metadata:
  name: subway-realtime-cron-job
  namespace: hyuabot-dev
spec:
  schedule: "* * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: subway-realtime-cron-job
            image: hyuabot-subway-cron-job-image
            imagePullPolicy: Never
            env:
            - name: POSTGRES_ID
              valueFrom:
                secretKeyRef:
                  name: secret
                  key: DB_ID
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: secret
                  key: DB_PASSWORD
            - name: POSTGRES_HOST
              value: hyuabot-database
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_DB
              value: hyuabot
            - name: METRO_AUTH_KEY
              valueFrom:
                secretKeyRef:
                  name: secret
                  key: METRO_API_KEY
          restartPolicy: OnFailure
---
# Create a batch job to fetch reading room realtime data
apiVersion: batch/v1
kind: CronJob
metadata:
  name: reading-room-cron-job
  namespace: hyuabot-dev
spec:
  schedule: "* * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: reading-room-cron-job
            image: hyuabot-reading-room-cron-job-image
            imagePullPolicy: Never
            env:
            - name: POSTGRES_ID
              valueFrom:
                secretKeyRef:
                  name: secret
                  key: DB_ID
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: secret
                  key: DB_PASSWORD
            - name: POSTGRES_HOST
              value: hyuabot-database
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_DB
              value: hyuabot
          restartPolicy: OnFailure
---
# Create a batch job to fetch cafeteria realtime data
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cafeteria-cron-job
  namespace: hyuabot-dev
spec:
  schedule: "0 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: cafeteria-cron-job
            image: hyuabot-cafeteria-cron-job-image
            imagePullPolicy: Never
            env:
            - name: POSTGRES_ID
              valueFrom:
                secretKeyRef:
                  name: secret
                  key: DB_ID
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: secret
                  key: DB_PASSWORD
            - name: POSTGRES_HOST
              value: hyuabot-database
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_DB
              value: hyuabot
          restartPolicy: OnFailure
---
# Create a API server
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hyuabot-api
  namespace: hyuabot-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hyuabot-api
  template:
    metadata:
      labels:
        app: hyuabot-api
    spec:
      volumes:
      - name: postgres-pv-volume
        persistentVolumeClaim:
          claimName: postgresql-pv-claim
      containers:
      - name: api
        image: hyuabot-api-server
        imagePullPolicy: Never
        ports:
        - containerPort: 3000
        env:
          - name: POSTGRES_ID
            valueFrom:
              secretKeyRef:
                name: secret
                key: DB_ID
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: secret
                key: DB_PASSWORD
          - name: POSTGRES_HOST
            value: hyuabot-database
          - name: POSTGRES_PORT
            value: "5432"
          - name: POSTGRES_DB
            value: hyuabot
---
# Expose the API server
apiVersion: v1
kind: Service
metadata:
  name: hyuabot-api
  namespace: hyuabot-dev
  labels:
    app: hyuabot-api
spec:
  type: NodePort
  ports:
   - port: 3000
     nodePort: 30000
  selector:
   app: hyuabot-api